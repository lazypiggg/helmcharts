apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "kafka.fullname" . }}
  labels:
    app: {{ include "kafka.name" . | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
spec:
  serviceName: {{ template "kafka.fullname" . }}-headless
  replicas: {{ default 3 .Values.Replicas }}
  template:
    metadata:
      labels:
        app: {{ include "kafka.name" . | quote }}
        release: {{ .Release.Name | quote }}
    spec:
      containers:
      - name: {{ template "kafka.name" . }}-broker
        image: "{{ .Values.registryAddress }}/claas/catalog-v2-kafka:0.11.0.0"
        imagePullPolicy: "{{ .Values.ImagePullPolicy }}"
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        livenessProbe:
          exec:
            command:
              - bin/kafka-topics.sh
              - --zookeeper
              - "{{ .Values.zookeeper.serverhost }}:{{ .Values.zookeeper.serverport }}"
              - --list
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
              - bin/kafka-topics.sh
              - --zookeeper
              - "{{ .Values.zookeeper.serverhost }}:{{ .Values.zookeeper.serverport }}"
              - --list
          initialDelaySeconds: 30
          timeoutSeconds: 5
        ports:
        - containerPort: 9092
          name: kafka
        resources:
{{ toYaml .Values.resources | indent 10 }}
        command:
        - sh
        - -c
        - "./bin/kafka-server-start.sh config/server.properties --override advertised.listeners=PLAINTEXT://${POD_IP}:9092 --override zookeeper.connect={{ .Values.zookeeper.serverhost }}:{{ .Values.zookeeper.serverport }} --override log.dirs={{ printf "%s/logs" .Values.DataDirectory }} --override broker.id=${HOSTNAME##*-}"
        volumeMounts:
        - name: datadir
          mountPath: "{{ .Values.DataDirectory }}"
  volumeClaimTemplates:
  - metadata:
      name: datadir
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.Storage }}
