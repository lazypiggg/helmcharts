apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "hadoop.fullname" . }}-{{ index .Values "metadata" "k8sResourceName" "config-files" }} 
data:
  bootstrap.sh: |
    #!/bin/bash

    : ${HADOOP_PREFIX:={{ .Values.injectCfgFiles.cfgMountPath }}}

    . $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh

    # Directory to find config artifacts
    CONFIG_DIR="/tmp/hadoop-config"

    # Copy config files from volume mount

    # for f in core-site.xml hdfs-site.xml mapred-site.xml yarn-site.xml; do
    #   if [[ -e ${CONFIG_DIR}/$f ]]; then
    #     cp ${CONFIG_DIR}/$f $HADOOP_PREFIX/etc/hadoop/$f
    #   else
    #     echo "ERROR: Could not find $f in $CONFIG_DIR"
    #     exit 1
    #   fi
    # done

    # installing libraries if any - (resource urls added comma separated to the ACP system variable)
    cd $HADOOP_PREFIX/share/hadoop/common ; for cp in ${ACP//,/ }; do  echo == $cp; curl -LO $cp ; done; cd -

  core-site.xml: |
    <configuration>
      <!-- 指定hdfs的nameservice为ns1 --> 
      <property>
        <name>fs.defaultFS</name>
        <value>hdfs://{{ template "hadoop.fullname" . }}/</value>
      </property>
      <!-- 指定hadoop临时目录 
      <property>
        <name>hadoop.tmp.dir</name>
        <value>/tmp</value>
      </property>-->
      <!-- 指定zookeeper地址 -->                  
      <property>  
        <name>ha.zookeeper.quorum</name>
        <value>
        {{- range $v := until ((int .Values.zookeeper.replicas) | default 3 )}}
        {{- $.Values.zookeeper.metadata.k8sResourceName.name -}}-{{- $v -}}
        .{{- $.Values.zookeeper.metadata.k8sResourceName.svc -}}
        .{{- $.Values.zookeeper.metadata.k8sResourceName.namespace -}}
        :{{- $.Values.zookeeper.port.clientPort -}}
        {{- if eq (add1 $v) (int $.Values.zookeeper.replicas) -}}
        {{- else -}}
        {{- printf "," -}}
        {{- end -}}
        {{ end -}}
        </value>
      </property>  
      <!-- <property>
        <name>dfs.journalnode.edits.dir</name>
        <value>{{- .Values.masterPod.mountPath -}}/journal</value>
      </property> -->
      <property>
        <name>fs.trash.interval</name>
        <value>1440</value>
      </property>
      <property>
        <name>io.file.buffer.size</name>
        <value>65536</value>
      </property>
    </configuration>

  hdfs-site.xml: |
    <configuration>
      <property>
        <name>dfs.replication</name>
        <value>{{- .Values.corePod.replicas -}}</value>
      </property>
      <property>
        <name>dfs.namenode.name.dir</name>
        <value>{{- .Values.masterPod.mountPath -}}/nn</value>
      </property>
      <property>
        <name>dfs.datanode.data.dir</name>
        <value>{{- .Values.masterPod.mountPath -}}/dn</value>
      </property>
      <property>
        <name>dfs.namenode.checkpoint.dir</name>
        <value>{{- .Values.masterPod.mountPath -}}/checkpoint</value>
      </property>
      <property>
        <name>dfs.journalnode.edits.dir</name>
        <value>{{- .Values.masterPod.mountPath -}}/journal</value>
      </property>
      <property>
        <name>dfs.nameservices</name>
        <value>{{- template "hadoop.fullname" . -}}</value>
      </property>
      <property>
        <name>dfs.ha.namenodes.{{- template "hadoop.fullname" . -}}</name>
        <value>nn1,nn2</value>
      </property>
      <property>
        <name>dfs.namenode.rpc-address.{{- template "hadoop.fullname" . -}}.nn1</name>
        <value>{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master" -}}-0.{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master-svc" -}}
                .{{- .Release.Namespace -}}
                :{{- .Values.masterPod.port.p9000 -}}</value>
      </property>
      <property>
        <name>dfs.namenode.rpc-address.{{- template "hadoop.fullname" . -}}.nn2</name>
        <value>{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master" -}}-1.{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master-svc" -}}
                .{{- .Release.Namespace -}}
                :{{- .Values.masterPod.port.p9000 -}}</value>
      </property>
      <property>
        <name>dfs.namenode.http-address.{{- template "hadoop.fullname" . -}}.nn1</name>
        <value>{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master" -}}-0.{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master-svc" -}}
                .{{- .Release.Namespace -}}
                :{{- .Values.masterPod.port.p50070 -}}</value>
      </property>
      <property>
        <name>dfs.namenode.http-address.{{- template "hadoop.fullname" . -}}.nn2</name>
        <value>{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master" -}}-1.{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master-svc" -}}
                .{{- .Release.Namespace -}}
                :{{- .Values.masterPod.port.p50070 -}}</value>
      </property>
      <property>
        <name>dfs.namenode.shared.edits.dir</name>
        <value>qjournal://
        {{- range $v := until ((int .Values.journal.journalPod.replicas) | default 3 )}}
        {{- $.Release.Name -}}-{{- index $.Values "journal" "metadata" "k8sResourceName" "journal-chart" -}}-{{- $v -}}
        .{{- $.Release.Name -}}-{{- index $.Values "journal" "metadata" "k8sResourceName" "journal-chart" -}}
        -{{- index $.Values "journal" "metadata" "k8sResourceName" "journal-svc" -}}
        .{{- index $.Values "journal" "metadata" "k8sResourceName" "journal-namespace" | default  $.Release.Namespace -}}
        :{{- index $.Values.journal.journalPod.port.p8485 -}}
        {{- if eq (add1 $v) (int $.Values.journal.journalPod.replicas) -}}
        {{- else -}}
        {{- printf ";" -}}
        {{- end -}}
        {{- end -}}
        /{{- template "hadoop.fullname" . -}}</value>
      </property>
      <property>
        <name>dfs.client.failover.proxy.provider.{{ template "hadoop.fullname" . }}</name>
        <value>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider</value>
      </property>
      <property>
        <name>dfs.ha.fencing.methods</name>
        <value>sshfence</value>
      </property>
      <property>
        <name>dfs.ha.fencing.ssh.private-key-files</name>
        <value>/root/.ssh/id_rsa</value>
      </property>
      <property>
      <name>dfs.ha.automatic-failover.enabled</name>
      <value>true</value>
    </property>
      <property>
        <name>dfs.namenode.handler.count</name>
        <value>10</value>
      </property>
      <property>
        <name>dfs.datanode.handler.count</name>
        <value>10</value>
      </property>
      <property>
        <name>dfs.webhdfs.enabled</name>
        <value>true</value>
      </property>
      <property>
        <name>dfs.namenode.datanode.registration.ip-hostname-check</name>
        <value>false</value>
      </property>
      <!-- add for k8 client ack warning. -->
      <property>
        <name>dfs.client.use.datanode.hostname</name>
        <value>true</value>
      </property>
      <property>
        <name>dfs.datanode.use.datanode.hostname</name>
        <value>true</value>
      </property>
    </configuration>

  mapred-site.xml: |
    <configuration>
      <property>
        <name>mapreduce.framework.name</name>
        <value>yarn</value>
      </property>
    </configuration>

  yarn-site.xml: |
    <configuration>
      <property>
        <name>yarn.resourcemanager.ha.enabled</name>
        <value>true</value>
      </property>
      <property>
        <name>yarn.resourcemanager.cluster-id</name>
        <value>{{ template "hadoop.fullname" . }}</value>
      </property>
      <property>
        <name>yarn.resourcemanager.ha.rm-ids</name>
        <value>rm1,rm2</value>
      </property>
      <property>
        <name>yarn.resourcemanager.hostname.rm1</name>
        <value>{{- template "hadoop.fullname" . -}}
                -{{- index .Values "metadata" "k8sResourceName" "master" -}}-0.{{- template "hadoop.fullname" . -}}
                -{{- index .Values "metadata" "k8sResourceName" "master-svc" -}}
                .{{- .Release.Namespace -}}</value>
      </property>
      <property>
        <name>yarn.resourcemanager.hostname.rm2</name>
        <value>{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master" -}}-1.{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master-svc" -}}
                .{{- .Release.Namespace -}}</value>
      </property>
      <property>
        <name>yarn.resourcemanager.webapp.address.rm1</name>
        <value>{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master" -}}-0.{{- template "hadoop.fullname" . -}}
                -{{-  index .Values "metadata" "k8sResourceName" "master-svc" -}}
                .{{- .Release.Namespace -}}
                :{{- .Values.masterPod.port.p8088 -}}</value>
      </property>
      <property>
        <name>yarn.resourcemanager.webapp.address.rm2</name>
        <value>{{- template "hadoop.fullname" . -}}
                -{{-   index .Values "metadata" "k8sResourceName" "master" -}}-1.{{- template "hadoop.fullname" . -}}
                -{{-   index .Values "metadata" "k8sResourceName" "master-svc" -}}
                .{{- .Release.Namespace -}}
                :{{- .Values.masterPod.port.p8088 -}}</value>
      </property>
      <property>
        <name>yarn.resourcemanager.zk-address</name>
        <value>
        {{- range $v := until ((int .Values.zookeeper.replicas) | default 3 )}}
        {{- $.Values.zookeeper.metadata.k8sResourceName.name -}}-{{- $v -}}
        .{{- $.Values.zookeeper.metadata.k8sResourceName.svc -}}
        .{{- $.Values.zookeeper.metadata.k8sResourceName.namespace -}}
        :{{- $.Values.zookeeper.port.clientPort -}}
        {{- if eq (add1 $v) (int $.Values.zookeeper.replicas) -}}
        {{- else -}}
        {{- printf "," -}}
        {{- end -}}
        {{ end -}}
        </value>
      </property>     
      <property>
        <name>yarn.nodemanager.aux-services</name>
        <value>mapreduce_shuffle</value>
      </property>
      <property>
        <name>yarn.nodemanager.aux-services.mapreduce.shuffle.class</name>
        <value>org.apache.hadoop.mapred.ShuffleHandler</value>
      </property>
      <property>
        <name>yarn.scheduler.minimum-allocation-mb</name>
        <value>128</value>
      </property>
      <property>
        <name>yarn.scheduler.maximum-allocation-mb</name>
        <value>2048</value>
      </property>
      <property>    
        <name>yarn.log-aggregation-enable</name>
        <value>true</value>    
      </property>
      <property>    
        <name>yarn.nodemanager.resource.memory-mb</name>    
        <value>4096</value>
      </property>
      <property>    
        <name>yarn.nodemanager.resource.cpu-vcores</name>    
        <value>2</value>    
      </property>
      <property>
        <description>Indicate to clients whether Timeline service is enabled or not.
        If enabled, the TimelineClient library used by end-users will post entities
        and events to the Timeline server.</description>
        <name>yarn.timeline-service.enabled</name>
        <value>true</value>
      </property>
      <property>
        <description>The setting that controls whether yarn system metrics is
        published on the timeline server or not by RM.</description>
        <name>yarn.resourcemanager.system-metrics-publisher.enabled</name>
        <value>true</value>
      </property>
      <property>
        <description>Indicate to clients whether to query generic application
        data from timeline history-service or not. If not enabled then application
        data is queried only from Resource Manager.</description>
        <name>yarn.timeline-service.generic-application-history.enabled</name>
        <value>true</value>
      </property>
      <property>
        <name>yarn.timeline-service.hostname</name>
        <value>{{- template "hadoop.fullname" . -}}
        -{{- index .Values "metadata" "k8sResourceName" "timeline-svc" -}}
        </value>
      </property>
    </configuration>



